<!DOCTYPE html>
<html>
<head>
    <title>ESTIMATE</title>
    <style>
        #right-panel {
            font-family: 'Roboto', 'sans-serif';
            line-height: 25px;
            padding-left: 10px;
        }

        #right-panel select, #right-panel input {
            font-size: 15px;
        }

        #right-panel select {
            width: 100%;
        }

        #right-panel i {
            font-size: 15px;
        }
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #map {
            height: 100%;
            width: 50%;
        }

        #right-panel {
            float: right;
            width: 48%;
            padding-left: 2%;
        }

        #output {
            font-size: 15px;
        }
    </style>
</head>
<body>
    <div id="right-panel">
        <strong>Estimated Distance</strong>
        <div id="output"></div>
        <div id="km"></div>
        <div id="time"></div>
    </div>

    <div id="map"></div>

    <script type="text/javascript">
        function initMap() {
            var bounds = new google.maps.LatLngBounds;
            var markersArray = [];
            var renderer = '';

            /*var destination_1 = {lat: 19.288151, lng: -99.666631};
            var destination_2 = {lat: 19.280886, lng: -99.668155};
            var destination_3 = {lat: 19.290783, lng: -99.622275};
            var destination_2 = {lat: 19.309302, lng: -99.586742};
            var destination_3 = {lat: 19.278808, lng: -99.658871};*/


            var destinationIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=D|FF0000|000000';
            var originIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=O|FFFF00|000000';
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 19.282337 , lng: -99.654876},
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                scaleControl: false
            });

            /*var trafficLayer = new google.maps.TrafficLayer();
            trafficLayer.setMap(map);*/

            var geocoder = new google.maps.Geocoder;
            var infoWindow = new google.maps.InfoWindow({map: map});
            if (navigator.geolocation) {
                navigator.geolocation.watchPosition(function(position) {

                    var origin = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var city = position.coords.locality;
                    var destination_1 = {lat: 19.288151, lng: -99.666631};
                    var destination_2 = {lat: 19.280886, lng: -99.668155};
                    var destination_3 = {lat: 19.290783, lng: -99.622275};


            var destinationIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=D|FF0000|000000';
            var originIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=O|FFFF00|000000';
            /*infoWindow.setPosition(origin);
            infoWindow.setContent('<h2>Your position</h2>'+'<p>Latitude: ' + position.coords.latitude + ' -Longitude: ' + position.coords.longitude + '</p>' + 'city:' + city);
            map.setCenter(origin);*/

            var service = new google.maps.DistanceMatrixService;
            service.getDistanceMatrix({
                origins: [{lat: position.coords.latitude, lng: position.coords.longitude}],
                destinations: [destination_1, destination_2, destination_3],

            travelMode: google.maps.TravelMode.DRIVING,
            unitSystem: google.maps.UnitSystem.METRIC,
            avoidHighways: false,
            avoidTolls: false
            }, function(response, status) {
                if (status !== google.maps.DistanceMatrixStatus.OK) {
                    alert('Error was: ' + status);
                } else {
                    var originList = response.originAddresses;
                    var destinationList = response.destinationAddresses;
                    var outputDiv = document.getElementById('output');
                    outputDiv.innerHTML = '';
                    deleteMarkers(markersArray);

                    var showGeocodedAddressOnMap = function(asDestination) {
                        var icon = asDestination ? destinationIcon : originIcon;
                        return function(results, status) {
                            if (status === google.maps.GeocoderStatus.OK) {
                                map.fitBounds(bounds.extend(results[0].geometry.location));
                                markersArray.push(new google.maps.Marker({
                                    map: map,
                                    position: results[0].geometry.location,
                                    icon: icon
                                }));
                            } else {
                                alert('Geocode was not successful due to: ' +  status);
                            }
                        };
                    };

                    for (var i = 0; i < originList.length; i++) {
                        var results = response.rows[i].elements;
                        geocoder.geocode({'address': originList[i]},
                        showGeocodedAddressOnMap(false));
                    for (var j = 0; j < results.length; j++) {
                        geocoder.geocode({'address': destinationList[j]},
                        showGeocodedAddressOnMap(true));
                        outputDiv.innerHTML +='<p>From ' + originList[i] + ' to ' + destinationList[j] + ': ' + results[j].distance.text + ' in ' +
                        results[j].duration.text + '.</p><br>';
                        /*document.getElementById('km').innerHTML = '<p>The estimated distance from your position is about: ' + results[j].distance.text + '.</p>';
                        document.getElementById('time').innerHTML = '<p>The estimated time in car is about: ' + results[j].duration.text + '.</p>';*/
                    }
                }

            }
            });
                }, function() {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                handleLocationError(false, infoWindow, map.getCenter());
            }

            function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                infoWindow.setPosition(pos);
                infoWindow.setContent(browserHasGeolocation ?
                'Error: The Geolocation service failed.' :
                'Error: Your browser does not support geolocation.');
            }
            }
            alert (' a ' + results[j].distance.text);
            function deleteMarkers(markersArray) {
                for (var i = 0; i < markersArray.length; i++) {
                    markersArray[i].setMap(null);
                }
                markersArray = [];
            }
            var km = results[j].distance.text;
            alert(' a ' + outputDiv);

    </script>
</body>
<script async defer src="https://maps.googleapis.com/maps/api/js?new_forward_geocoder=true&key=AIzaSyD-qHMDSMh9zmb5UDCTrbm13REYz4Y6DiQ&new_forward_geocoder=true&callback=initMap"></script>





